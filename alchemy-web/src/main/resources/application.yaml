spring:
  profiles:
    active:  @env@
    include: @spring.active.jdbc@,@spring.active.mq@,@spring.active.dubbo@,@spring.active.redis@
  application:
    name: alchemy
  redis:
        name: dispatch-redis
        sentinel:
              nodes:  common101.redis.2dfire-daily.com:26379
              master: cache101
        database: 2
        pool:
              max-idle: 20
              min-idle: 20
              max-wait: 30000
              test-on-borrow: true
              time-between-eviction-runs-millis: 6000
  datasource:
        name: default
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://common101.my.2dfire-daily.com:3306/demon_detector?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true
        username: twodfire
        password: 123456

        druid:
            initial-size: 20
            max-active: 100       #最大连接池数量
            min-idle: 10              #最小连接池数量
            max-wait: 5000 #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
            validation-query: select 1                #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
            validation-query-timeout: 1                #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
            test-on-borrow:        false        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
            test-on-return:        false        #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
            test-while-idle:        true        #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
            time-between-eviction-runs-millis: 60000        #1分钟（1.0.14）        有两个含义：
                                            #1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
            min-evictable-idle-time-millis:  300000      #30分钟（1.0.14）        连接保持空闲而不被驱逐的最长时间
            log-abandoned: true
            connection-init-sqls: set names utf8mb4
            stat-view-servlet:
              enabled: false

  druid:
            servlet:
                urlMappings:
                    - /druid/*
            filter:
                urlPatterns:
                    - /*
                initParameters:
                    - exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.swf,/druid/*"
                    - profileEnable: true
                    - sessionStatEnable: true
                    - sessionStatMaxCount: 10010240
                    - createSession: false
  jpa:
        database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
        database: MYSQL
        show-sql: true
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: false
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
  dubbo:
        application:
            name: beaconfire
            owner: yuntun
        registry:
            address: zookeeper://zk1.2dfire-daily.com:2181?backup=zk2.2dfire-daily.com:2181,zk3.2dfire-daily.com:2181
        protocol:
            name: dubbo
            port: -1
            accesslog: /opt/logs/spring-boot/access.log
        provider:
            retries: 0
            delay: -1
            loadbalance: leastactive
            version: 1.0.0
        consumer:
            timeout: 20000
            check: false
            version: 1.0.0
        service:
            shutdown:
                  wait:  30000
        scan: com.dfire.platform.web
logging:
  config: classpath:logback-spring.xml
  path: /opt/logs/spring-boot
  level:
    root: info
    com.dfire.platform: trace
    com.alibaba.dubbo: warn

ac:
  flame:
    maxTotal: 4096
    maxWaitMillis: 500
    minEvictableIdleTimeMillis: 10000


server:
  port: 8080
  context-path: /alchemy
---
spring:
    profiles: dev
    dubbo:
        provider:
            version: 1.0.0dev
server:
  port: 8080

---
spring:
    profiles: daily
    dubbo:
        provider:
            version: 1.0.0
        consumer:
            version: 1.0.0
logging:
  level:
    root: INFO

---
spring:
    profiles: pre
    datasource:
        name: default
        url: jdbc:mysql://master1401.my.2dfire-inc.com:3306/demon_detector?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true
        username: demon_detector
        password: demon_detector@552208

    dubbo:
        registry:
            address: zookeeper://zk1.2dfire-inc.com:2181?backup=zk2.2dfire-inc.com:2181,zk3.2dfire-inc.com:2181
    redis:
          sentinel:
                nodes: sentinel1.redis.2dfire-inc.com:26379,sentinel2.redis.2dfire-inc.com:26379,sentinel3.redis.2dfire-inc.com:26379,sentinel4.redis.2dfire-inc.com:26379,sentinel5.redis.2dfire-inc.com:26379
                master: beaconfire
          database: 5
logging:
  level:
    root: INFO

---
spring:
    profiles: publish
    datasource:
        name: default
        url: jdbc:mysql://master1401.my.2dfire-inc.com:3306/demon_detector?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true
        username: demon_detector
        password: demon_detector@552208

    dubbo:
            registry:
                address: zookeeper://zk1.2dfire-inc.com:2181?backup=zk2.2dfire-inc.com:2181,zk3.2dfire-inc.com:2181
    redis:
          sentinel:
                nodes: sentinel1.redis.2dfire-inc.com:26379,sentinel2.redis.2dfire-inc.com:26379,sentinel3.redis.2dfire-inc.com:26379,sentinel4.redis.2dfire-inc.com:26379,sentinel5.redis.2dfire-inc.com:26379
                master: beaconfire
          database: 5
logging:
  level:
    root: warn


