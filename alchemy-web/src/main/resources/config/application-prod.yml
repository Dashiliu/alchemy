# ===================================================================
# Spring Boot configuration for the "prod" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================
spring:
    devtools:
        restart:
            enabled: false
        livereload:
            enabled: false
    servlet:
      multipart:
        max-file-size: 200Mb
        max-request-size: 200Mb
    jackson:
        serialization.indent_output: true
    application:
        name: alchemy
    redis:
        sentinel:
                  nodes:
                    - sentinel1.redis.2dfire-inc.com:26379,sentinel2.redis.2dfire-inc.com:26379,sentinel3.redis.2dfire-inc.com:26379,sentinel4.redis.2dfire-inc.com:26379,sentinel5.redis.2dfire-inc.com:26379
                  master: alchemy
        database: 13
        jedis:
          pool:
            max-active: 20
            max-idle: 20
            min-idle: 20

    dubbo:
            application:
                name: alchemy
                owner: congbai
            registry:
                address: zookeeper://zk1.2dfire-inc.com:2181?backup=zk2.2dfire-inc.com:2181,zk3.2dfire-inc.com:2181
            protocol:
                name: dubbo
                port: -1
                accesslog: /opt/logs/spring-boot/access.log
            provider:
                retries: 0
                delay: -1
                loadbalance: leastactive
                version: 1.0.0
            consumer:
                timeout: 20000
                check: false
                version: 1.0.0
            service:
                shutdown:
                      wait:  30000
            scan: com.dfire.platform.alchemy.web
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:mysql://cluster2200.my.2dfire-inc.com:3306/alchemy?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: alchemy
        password: alchemy@552208
        hikari:
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
    jpa:
        database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
        database: MYSQL
        show-sql: true
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: false
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
    liquibase:
        contexts: dev
    mail:
        host: localhost
        port: 25
        username:
        password:
    messages:
        cache-duration: PT1S # 1 second, see the ISO 8601 standard
    thymeleaf:
        cache: false
logging:
  config: classpath:alchemy-logback.xml
  path: /opt/logs/spring-boot
  level:
    root: info
    io.github.jhipster: INFO
    com.dfire.platform.alchemy: INFO

alchemy:
  file:
#    upload-url: http://upload.2dfire-daily.com/upbigfile
#    download-url: https://assets.2dfire.com/
  clusters:
    - name: flink_cpu
      type: flink
      mode: zookeeper
      clusterId: flink-cpu
      avg: com.dfire.platform:alchemy-connectors:0.0.5
      zookeeperQuorum: zk101.2dfire-inc.com:2181,zk102.2dfire-inc.com:2181,zk103.2dfire-inc.com:2181
      storagePath: hdfs://hadoop1169.prod.2dfire.info:8020/user/alchemy/flink/ha-cpu
      address: flink-jobmanager-cpu
      port: 6123
    - name: flink_5_4_1
      type: flink
      mode: zookeeper
      clusterId: flink5-4-1-default-n
      avg: com.dfire.platform:alchemy-connectors:0.0.5
      zookeeperQuorum: zk101.2dfire-inc.com:2181,zk102.2dfire-inc.com:2181,zk103.2dfire-inc.com:2181
      storagePath: hdfs://hadoop1169.prod.2dfire.info:8020/user/alchemy/flink/ha5-4-1-default-n
      address: flink-jobmanager-1-5-4-1-n
      port: 6123
    - name: flink_5_4_8
      type: flink
      mode: zookeeper
      clusterId: flink5-4-8-default
      avg: com.dfire.platform:alchemy-connectors:0.0.5
      zookeeperQuorum: zk101.2dfire-inc.com:2181,zk102.2dfire-inc.com:2181,zk103.2dfire-inc.com:2181
      storagePath: hdfs://hadoop1169.prod.2dfire.info:8020/user/alchemy/flink/ha5-4-8-default
      address: flink-jobmanager-1-5-4-8
      port: 6123
    - name: flink_log
      type: flink
      mode: zookeeper
      clusterId: flink-log
      avg: com.dfire.platform:alchemy-connectors:0.0.5
      zookeeperQuorum: zk101.2dfire-inc.com:2181,zk102.2dfire-inc.com:2181,zk103.2dfire-inc.com:2181
      storagePath: hdfs://hadoop1169.prod.2dfire.info:8020/user/alchemy/flink/ha-log
      address: log-jobmanager
      port: 6123
  job:
    queueSize: 1000
    initialDelay: 1 #MINUTES
    period:   5 #MINUTES
  flame:
    maxTotal: 4096
    maxWaitMillis: 500
    minEvictableIdleTimeMillis: 10000
# ===================================================================
# To enable SSL, generate a certificate using:
# keytool -genkey -alias alchemy -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#    port: 443
#    ssl:
#        key-store: keystore.p12
#        key-store-password: <your-password>
#        key-store-type: PKCS12
#        key-alias: alchemy
#        # The ciphers suite enforce the security by deactivating some old and deprecated SSL cipher, this list was tested against SSL Labs (https://www.ssllabs.com/ssltest/)
#        ciphers: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 ,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA,TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
# ===================================================================
server:
    port: 8080
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
        min-response-size: 1024

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
        cache: # Used by the CachingHttpHeadersFilter
            timeToLiveInDays: 1461
    cache: # Cache configuration
        ehcache: # Ehcache configuration
            time-to-live-seconds: 3600 # By default objects stay 1 hour in the cache
            max-entries: 1000 # Number of objects in each cache entry
    security:
        authentication:
            jwt:
                secret: acfe6f1d2de4525b245ccc724ec75a38ee9d8f56
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
                token-validity-in-seconds-for-remember-me: 2592000
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: alchemy@localhost
        base-url: http://my-server-url-to-change # Modify according to your server's URL
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx:
            enabled: true
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
