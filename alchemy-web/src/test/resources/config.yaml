job:
    name: test
    cluster:
    parallelism: 1
    timeCharacteristic: EventTime
    checkpointingInterval: 60000 #ms
    #jarPath: /Users/dongbinglin/Code/platform/alchemy/alchemy-connectors/target/alchemy-connectors-1.0-SNAPSHOT.jar
    table:
        #        sql: select * from  TaxiRides
        sources:
#        - name: kafka_table_test
#          schema:
#          - name: id
#            type: VARCHAR
#          - name: rideId
#            type: BIGINT
#          - name: lon
#            type: FLOAT
#          - name: lat
#            type: FLOAT
#          - name: procTime
#            type: TIMESTAMP
#            proctime: true
#          - name: rideTime
#            type: TIMESTAMP
#            rowtime:
#                timestamps:
#                    type: "from-field"
#                    from: "rideTime"
#                watermarks:
#                    type: "periodic-bounded"
#                    delay: "1000"
#          connector:
#              property-version: 1
#              type: kafka
#              version: 0.11
#              topic: TaxiRides
#              startup-mode: earliest-offset
#              properties:
#              - key: zookeeper.connect
#                value: localhost:2181
#              - key: bootstrap.servers
#                value: localhost:9092
#              - key: group.id
#                value: testGroup
#          format:
#              property-version: 1
#              type: json
#              schema: "ROW(rideId LONG, lon FLOAT, lat FLOAT, rideTime TIMESTAMP)"
        - name: rocketmq_table_test
          schema:
          - name: id
            type: VARCHAR
          - name: goodId
            type: VARCHAR
          - name: entityId
            type: VARCHAR
          - name: rideTime
            type: TIMESTAMP
            rowtime:
                timestamps:
                    type: "from-field"
                    from: "rideTime"
                watermarks:
                    type: "periodic-bounded"
                    delay: "1000"
          connector:
              type: rocketMQ
              nameServers: mq101.2dfire-daily.com:9876;mq102.2dfire-daily.com:9876
              name: hot_goods
              topic: hot_goods
#              tag: *
              consumerGroup: c_alchemy_hot_goods
          format:
              property-version: 1
              type: json
              schema: "ROW(id VARCHAR,entityId VARCHAR,goodId VARCHAR, rideTime TIMESTAMP)"
#        udfs:
#        - name: scalarF
#          value: ${0}
#        - name: tableF
#          value: ${1}
#        - name: aggreF
#          value: ${2}
        sinks:
#        - name: esSink
#          type: elasticsearch
#          clusterName: daily
#          address: 10.1.21.61:9300,10.1.21.62:9300,10.1.21.63:9300
#          index: flink-test
#          bufferSize: 2  #M
#        - name: hbaseSink
#          type: hbase
#          bufferSize: 1048576 # byte
#          family: s
#          node: /hbase-unsecure
#          tableName: flink-test
#          zookeeper: 10.1.22.21:2181,10.1.22.22:2181,10.1.22.23:2181
#          value: ${3}
#        - name: kafkaSink
#          type: kafka
#          topic: stream_dest
#          properties:
#          - key: bootstrap.servers
#            value: kafka1001.2dfire-daily.com:9092,kafka1002.2dfire-daily.com:9092
        - name: hot_notify
          type: rocketMQ
          topic: alchemy
          tag: hot_goods
          nameServers: mq101.2dfire-daily.com:9876;mq102.2dfire-daily.com:9876
          producerGroup: c_alchemy_producer
